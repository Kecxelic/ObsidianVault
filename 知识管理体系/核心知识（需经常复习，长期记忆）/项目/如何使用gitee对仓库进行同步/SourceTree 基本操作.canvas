{
	"nodes":[
		{"id":"5897a4298a68c3de","type":"text","text":"### 一、仓库管理\n1. **仓库初始化与克隆**  \n   - 创建本地仓库：通过「文件 > 新建/克隆 > 新建仓库」指定路径初始化。  √\n\n2. **仓库状态查看**  \n   - 实时显示当前分支、未暂存文件、已暂存文件及未推送/拉取的提交数。  \n   - 图形化分支拓扑图：直观展示分支演进历史及合并关系，支持缩放和筛选。","x":-520,"y":-520,"width":690,"height":211},
		{"id":"863067cc34e485d0","type":"text","text":"### 二、变更管理\n1. **暂存与提交**  \n   - 暂存文件：通过勾选文件或文件夹，将修改添加到暂存区（对应 `git add`）。  \n   - 提交更改：填写提交信息后点击「提交」，支持批量提交和选择性暂存。  \n   - 撤销暂存：取消勾选已暂存文件，恢复至工作区状态。\n\n2. **版本回退**  \n   - 通过提交历史右键选择「重置当前分支到此次提交」，支持软重置（保留修改）、混合重置（撤销暂存）或硬重置（丢弃修改）。  \n   - 查看文件历史：右键文件选择「显示历史」，对比不同版本内容差异。\n","x":-531,"y":-40,"width":712,"height":288},
		{"id":"868c3464552aa0a2","type":"text","text":"### 三、分支管理\n1. **分支创建与切换**  \n   - 新建分支：在分支列表右键选择「新建分支」，指定名称和起始提交。  \n   - 切换分支：双击本地分支或右键远程分支选择「检出为本地分支」。  \n   - 重命名/删除分支：右键分支选择对应操作，支持强制删除未合并分支。\n\n2. **分支合并与变基**  \n   - 合并分支：右键目标分支选择「合并到当前分支」，自动检测冲突并提示解决。  \n   - 交互式变基（Rebase）：选择提交范围进行压缩（Squash）、编辑消息或调整顺序，需注意远程分支强推风险。\n    #todo ","x":-531,"y":360,"width":755,"height":288},
		{"id":"650595f1c7190030","type":"text","text":"### 四、远程协作\n1. **拉取与推送**  \n   - 拉取（Pull）：同步远程分支更新并自动合并到当前分支（`git fetch + merge`）。  \n   - 推送（Push）：将本地分支提交推送到远程仓库，支持指定远程分支和强制推送（需谨慎）。  \n   - 仅获取（Fetch）：下载远程分支信息但不合并，用于更新本地跟踪分支。\n\n2. **远程分支管理**  \n   - 查看远程分支：在分支列表展开「远程」分组，显示所有远程分支状态。  \n   - 跟踪分支设置：右键远程分支选择「设置为跟踪分支」，简化后续拉取/推送操作。","x":-520,"y":760,"width":804,"height":264},
		{"id":"83507a67e9ad969b","type":"text","text":"### 五、冲突解决\n1. **冲突识别**  \n   - 合并或拉取时自动标记冲突文件，显示为红色感叹号图标。  \n   - 差异比较器：双击冲突文件查看「本地」「远程」「基础版本」三方差异。\n\n2. **冲突处理**  \n   - 手动编辑：直接修改冲突文件，删除 Git 冲突标记（`<<<<<<<`/`=======`/`>>>>>>>`）。  \n   - 图形化合并工具：通过 SourceTree 内置工具或外部编辑器（如 VSCode）选择保留内容。  \n   - 标记解决：冲突文件修改后右键选择「标记为已解决」，提交合并结果。","x":-520,"y":1084,"width":818,"height":264},
		{"id":"54dd39cc4dbe156b","type":"text","text":"### 六、高级辅助功能\n1. **提交日志与搜索**  \n   - 可视化提交历史：按时间线展示提交节点，支持搜索作者、关键字或哈希值。  \n   - 过滤提交：通过分支、时间范围或文件路径筛选相关提交。\n\n2. **标签管理**  \n   - 创建标签：右键提交选择「创建标签」，用于标记发布版本（如 `v1.0`）。  \n   - 查看标签：在分支列表或提交历史中显示所有标签，支持快速切换至标签版本。\n\n3. **Stash 管理**  \n   - 贮藏（Stash）：暂存未提交的修改以便切换分支或处理紧急任务。  \n   - 应用贮藏：从贮藏列表恢复修改，支持合并到当前分支或新分支。","x":-521,"y":1420,"width":805,"height":349},
		{"id":"38530391d028eb08","type":"text","text":"以下是 SourceTree 图形化界面下的 Git 基本操作大纲，结合其可视化特性与 Git 核心功能进行分类说明：","x":-2080,"y":1216,"width":920,"height":101},
		{"id":"1274bae7710b4fa4","type":"text","text":"### 七、配置与个性化\n1. **基础设置**  \n   - Git 路径配置：指定本地 Git 可执行文件路径（首次使用时自动检测）。  \n   - 用户信息设置：填写姓名和邮箱，用于提交记录。\n\n2. **外观与行为**  \n   - 主题切换：选择浅色或深色模式，调整字体大小和界面布局。  \n   - 快捷键自定义：根据习惯配置提交、拉取等常用操作的快捷键。\n","x":-531,"y":1840,"width":640,"height":237},
		{"id":"50c651eab5f289e6","type":"text","text":"### 八、扩展与集成\n1. **外部工具集成**  \n   - 差异比较器：支持配置 Beyond Compare、VSCode 等外部工具替代内置比较器。  \n   - 命令行终端：直接在 SourceTree 中打开 Git Bash 或 PowerShell 执行自定义命令。\n\n2. **托管平台支持**  \n   - 集成 GitHub、Bitbucket 等平台：直接通过账号创建/管理拉取请求（Pull Request）。  \n   - 自动同步 issue 和评论：部分平台支持关联仓库与项目管理系统。\n\n通过以上大纲，用户可系统掌握 SourceTree 图形化操作的核心功能，从基础的仓库克隆到复杂的分支协作，均能通过直观的界面高效完成。对于初学者，建议结合 Git 基础概念（如暂存区、分支模型）逐步实践；进阶用户可探索变基、钩子脚本等高级特性，进一步优化工作流。","x":-520,"y":2160,"width":881,"height":325},
		{"id":"1cc74b145fb807fb","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/SSH是什么.md","x":2049,"y":84,"width":388,"height":740},
		{"id":"1b011d6fd8564b1a","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/SSH方式克隆私人仓库.md","x":2546,"y":175,"width":447,"height":560},
		{"id":"b923d7f12f3cfe70","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/怎么通过GitBash创建SSH秘钥？.md","x":3129,"y":220,"width":819,"height":469},
		{"id":"45f6dc09275a3a1c","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/SSH密钥生成和Gitee公钥配置全流程（Github通用）.md","x":4130,"y":593,"width":539,"height":943},
		{"id":"5d58967425c4c5f8","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/GitBash是什么？.md","x":4152,"y":-193,"width":248,"height":277},
		{"id":"e35f3ee0a3aa3ac9","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/Https方式克隆.md","x":2049,"y":-1074,"width":640,"height":1020},
		{"id":"7e55ee9d4f5c8817","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/如何从Gitee克隆一个私人仓库到本地？.md","x":1480,"y":-245,"width":352,"height":349},
		{"id":"50f878ba6c3e4477","type":"file","file":"知识管理体系/核心知识（需经常复习，长期记忆）/项目/如何使用gitee对仓库进行同步/SourceTree克隆远程仓库到本地(gitee).md","x":880,"y":-513,"width":493,"height":885},
		{"id":"616f7ff742b071cb","x":884,"y":945,"width":250,"height":60,"type":"text","text":"本地有一个git仓库，怎么上传到gitee？"},
		{"id":"ad1b2a889112de72","x":925,"y":1242,"width":1155,"height":2355,"type":"text","text":"以下是将本地 Git 仓库上传到 Gitee 的详细步骤，结合 Sourcetree 可视化工具和命令行操作：\n\n### 一、准备工作\n1. **注册并登录 Gitee**  \n   访问 [Gitee 官网](https://gitee.com/)，注册账号并登录。\n\n2. **创建远程仓库**  \n   - 点击右上角的 **+** → **新建仓库**，填写仓库名称、描述等信息，可勾选「初始化 README 文件」（若本地仓库无初始文件）。\n   - 记录仓库的 **HTTPS 或 SSH 地址**，后续需用此地址关联本地仓库。\n\n3. **安装并配置 Sourcetree**  \n   - 下载安装 [Sourcetree](https://www.sourcetreeapp.com/)，首次启动需关联 Git 路径并登录 Gitee 账号（通过 HTTPS 或 SSH 方式）。\n\n### 二、本地仓库初始化（若尚未初始化）\n1. **进入本地项目目录**\n   右键选择 **Open in SourceTree**，或通过终端执行：\n   ```bash\n   cd /path/to/local/repo\n   ```\n\n2. **初始化 Git 仓库**  \n   若本地目录未被 Git 管理，执行：\n   ```bash\n   git init\n   ```\n   此时会生成 `.git` 隐藏目录，用于存储版本历史。\n\n### 三、关联远程仓库\n1. **在 Sourcetree 中操作**  \n   - 点击左上角的 **+** → **克隆/新建** → **从 URL 克隆**。\n   - 输入 Gitee 仓库的 **HTTPS/SSH 地址**，选择本地存储路径，点击 **克隆**。  \n     *若本地已有仓库，需先删除 `.git` 目录（`rm -rf .git`）再克隆。*\n\n2. **命令行操作（可选）**  \n   执行以下命令关联远程仓库：\n   ```bash\n   git remote add origin https://gitee.com/your-username/your-repo.git  # HTTPS 方式\n   # 或\n   git remote add origin git@gitee.com:your-username/your-repo.git      # SSH 方式\n   ```\n   通过 `git remote -v` 验证关联是否成功。\n\n### 四、配置 SSH 密钥（推荐）\n1. **生成 SSH 密钥**  \n   打开终端执行：\n   ```bash\n   ssh-keygen -t ed25519 -C \"your-email@example.com\"\n   ```\n   按三次回车键完成生成，密钥文件默认存于 `~/.ssh/` 目录。\n\n2. **添加公钥到 Gitee**  \n   - 复制公钥内容：\n     ```bash\n     cat ~/.ssh/id_ed25519.pub\n     ```\n   - 登录 Gitee → **个人设置** → **SSH 公钥** → **添加公钥**，粘贴内容并保存。\n\n3. **测试 SSH 连接**  \n   执行：\n   ```bash\n   ssh -T git@gitee.com\n   ```\n   若输出 `Hi your-username! You've successfully authenticated...`，则配置成功。\n\n### 五、提交并推送代码\n1. **将文件添加到暂存区**  \n   在 Sourcetree 中，勾选需要提交的文件，点击 **+** 号将其添加到暂存区（等价于 `git add .`）。\n\n2. **提交到本地仓库**  \n   输入提交备注，点击 **提交**（等价于 `git commit -m \"your message\"`）。\n\n3. **推送至远程仓库**  \n   - 点击 **推送**，选择要推送的分支（默认 `main`），首次推送需选择远程仓库 `origin` 并勾选「设置上游分支」。\n   - 若使用命令行，执行：\n     ```bash\n     git push -u origin main  # 首次推送需加 -u 绑定上游分支\n     ```\n     后续可直接执行 `git push` 快速推送。\n\n### 六、验证结果\n1. **在 Gitee 上查看**  \n   刷新仓库页面，确认文件已成功上传，分支状态与本地一致。\n\n2. **处理冲突（若有）**  \n   若推送时提示冲突，需先执行 `git pull origin main` 拉取远程更新，合并冲突后再重新推送。\n\n### 注意事项\n1. **权限问题**  \n   - 确保本地仓库已关联正确的远程地址，且 Gitee 账号对目标仓库有写入权限。\n   - 使用 SSH 方式时，需正确配置密钥并关联账号。\n\n2. **分支命名**  \n   若远程仓库默认分支为 `master`，需将命令中的 `main` 替换为 `master`。\n\n通过以上步骤，你可以高效地将本地 Git 仓库同步到 Gitee，同时利用 Sourcetree 的可视化界面简化操作流程。"},
		{"id":"d592bf7f5cde4cc5","x":2293,"y":1582,"width":250,"height":217,"type":"text","text":"云仓库只有一个ReadMe文件，本地有10个文件，都已经提交了，但是没有ReadMe文件。\n这个时候，如果执行pull拉取操作。是不是会正常执行？\n\n如果执行push操作，"},
		{"id":"ee8d42c12baf6fa5","x":-740,"y":-2060,"width":520,"height":860,"type":"text","text":"简介\n# SVN和Git\nSVN集中式，每个客户端保留服务器上的副本。Git分布式。\n![[Pasted image 20250920184655.png]]"}
	],
	"edges":[
		{"id":"48d45926339c8aa9","fromNode":"38530391d028eb08","fromSide":"right","toNode":"5897a4298a68c3de","toSide":"left"},
		{"id":"ed3857b27401aa91","fromNode":"38530391d028eb08","fromSide":"right","toNode":"863067cc34e485d0","toSide":"left"},
		{"id":"953f0479e84d6558","fromNode":"38530391d028eb08","fromSide":"right","toNode":"650595f1c7190030","toSide":"left"},
		{"id":"9132568deda0ff49","fromNode":"38530391d028eb08","fromSide":"right","toNode":"83507a67e9ad969b","toSide":"left"},
		{"id":"b21b5e76f580c512","fromNode":"38530391d028eb08","fromSide":"right","toNode":"54dd39cc4dbe156b","toSide":"left"},
		{"id":"876defc2f5c52153","fromNode":"38530391d028eb08","fromSide":"right","toNode":"868c3464552aa0a2","toSide":"left"},
		{"id":"8c55909d09373999","fromNode":"38530391d028eb08","fromSide":"right","toNode":"1274bae7710b4fa4","toSide":"left"},
		{"id":"7bc032ca1d8c1fea","fromNode":"38530391d028eb08","fromSide":"right","toNode":"50c651eab5f289e6","toSide":"left"},
		{"id":"3e9f53ad31844066","fromNode":"650595f1c7190030","fromSide":"right","toNode":"50f878ba6c3e4477","toSide":"left"},
		{"id":"c58803e5149db72c","fromNode":"7e55ee9d4f5c8817","fromSide":"right","toNode":"e35f3ee0a3aa3ac9","toSide":"left"},
		{"id":"a337182144a761ad","fromNode":"b923d7f12f3cfe70","fromSide":"right","toNode":"5d58967425c4c5f8","toSide":"left"},
		{"id":"8640ebaecd372f30","fromNode":"1b011d6fd8564b1a","fromSide":"right","toNode":"b923d7f12f3cfe70","toSide":"left"},
		{"id":"be9ec6c28abefe15","fromNode":"b923d7f12f3cfe70","fromSide":"right","toNode":"45f6dc09275a3a1c","toSide":"left"},
		{"id":"12bdd6637e3ec59c","fromNode":"7e55ee9d4f5c8817","fromSide":"right","toNode":"1cc74b145fb807fb","toSide":"left"},
		{"id":"7e103536b01ed4a2","fromNode":"1cc74b145fb807fb","fromSide":"right","toNode":"1b011d6fd8564b1a","toSide":"left"},
		{"id":"50ed604c561aaa15","fromNode":"50f878ba6c3e4477","fromSide":"right","toNode":"7e55ee9d4f5c8817","toSide":"left"},
		{"id":"df1a79671b63b580","fromNode":"650595f1c7190030","fromSide":"right","toNode":"616f7ff742b071cb","toSide":"left"}
	]
}